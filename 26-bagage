"""
В заявке указаны время сдачи багажа и время освобождения ячейки (в минутах от начала суток).
Багаж одного пассажира размещается в одной свободной ячейке с минимальным номером.
Ячейки пронумерованы начиная с единицы. Размещение багажа в ячейке или её освобождение происходит в течение 1 мин.
Багаж можно поместить в только что освобождённую ячейку начиная со следующей минуты.

Если в момент сдачи багажа свободных ячеек нет, то пассажир уходит.
Определите, сколько пассажиров сможет сдать свой багаж в течение 24 ч и какой номер будет иметь ячейка,
которую займут последней. Если таких ячеек несколько, укажите минимальный номер ячейки.

Входные данные

В первой строке входного файла находится натуральное число K, не превышающее 1000, — количество ячеек в камере хранения.
Во второй строке — натуральное число N (N ≤ 1000), обозначающее количество пассажиров.
Каждая из следующих N строк содержит два натуральных числа, каждое из которых не превышает 1440:
указанное в заявке время размещения багажа в ячейке и время освобождения ячейки (в минутах от начала суток).
Запишите в ответе два числа: количество пассажиров, которые смогут воспользоваться камерой хранения,
и номер последней занятой ячейки.
"""


with open('KIM26/26_19.txt', 'r') as file:
    k = int(file.readline())
    n = int(file.readline())

    passengers = []

    for i in range(n):
        passengers.append(
            [*map(int, file.readline().split())]
        )

boxes = [-1] * k  # Массив, в который будут записаны данные об окончании хранения багажа в ячейке.

count = 0
last_start = 0
last_ceil = 0

passengers.sort()
for start, stop in passengers:
    """
    Для каждого пассажира рассматриваем каждую ячейку.
    """
    for i in range(len(boxes)):
        if start >= boxes[i] + 1:
            """
            Если время начала хранения багажа следующего пассажира 
            позже времени окончания хранения текущего,
            то можно разместить багаж следующего пассажира в ячейке. 
            """
            boxes[i] = stop
            count += 1

            if start > last_start:
                """
                Если начало хранения багажа пассажира 
                позже максимального времени начала хранения багажа,
                то надо обновить максимальное время начала хранения
                и сохранить текущий номер ячейки.
                """
                last_start = start
                last_ceil = i + 1

            break  # Важно!
            #  После выполнения первого условия необходимо прервать цикл,
            #  чтобы не происходило повторной записи пассажиров в другие ячейки.

print(count, last_ceil)
